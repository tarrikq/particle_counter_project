oldFile <- read.csv(file)
}
}
oldFile <- oldFile[ ,1:16]
oldFile$sampledDatePC <- as.POSIXct(oldFile$sampledDatePC, tz = "EST", format="%Y-%m-%d %H:%M:%S")
oldFile$Date <- as.POSIXct(oldFile$Date, tz = "EST", format="%Y-%m-%d %H:%M:%S")
oldFile$sampledDateFlow <- as.POSIXct(oldFile$sampledDateFlow, tz = "EST", format="%Y-%m-%d %H:%M:%S")
allData <- rbind(allData, oldFile)
allData <- allData[order(allData$filter, allData$Date), ]
allData <- allData[!duplicated(allData[ , c("Date","filter")]),]
pcList <- split(allData , f = allData$filter )
titles <- names(pcList)
View(allData)
list_p <- list()
i <- 0
z <- 0
p_list <- list()
for (df in pcList){
z <- z+1
j <- 1
df.name <- deparse(substitute(df))
sub <- subset(df, flow >0.01)
if (nrow(sub) == 0){
print("There is no relevent data. Check the flow data and particle data dates to see if they match")
p_list[[z]] <- sub
next
}
sub$difference <- 0
sub$runID <- 0
for (i in 1:length(sub$Date)){
difference <- abs(difftime(sub$Date[i+1], sub$Date[i] ,units="mins"))
sub$difference[i] <- difference
##runDifference <- difftime(sub$Date[i], sub$Date[1], units = "hours")
##sub$runningDifference[i] <- runDifference
if (is.na(difference)) {
difference <- 0
}
if (i == 1 & difference < 200){
sub$runID[i] <- 1
sub$runID[i+1] <- 1
}
if ( i == length(sub$Date)){
sub$runID[i] <- j
}
if (i == 1 & difference > 200){
j <- j+1
sub$runID[i] <- 1
sub$runID[i+1] <- j
}
if (difference < 200 & i != 1 & i != length(sub$Date)) {
sub$runID[i+1] <- j
}
if ( difference > 200 & i != 1 & i != length(sub$Date)){
j <- j+1
sub$runID[i+1] <- j
}
}
p_list[[z]] <- sub
}
names(p_list) <- titles
#then repeat all the code above but find the next filterOnDate AFTER the filterOffDate...and append the data into filterRunPCs.Do this until run out dates.
#then stored in a list like table_p where each filter has one dataframe.
#then once that code all works, put it into a for loop so it would run for every filter. Will need to instead start with an empty filterRunPCs dataframe and append to it instead of just staring it fresh.
list_df <-list()
i <- 0
z <- 0
for (df in p_list){
i <- i+1
listDF <- split(df, df$runID)
for (runs in listDF){
z <- z+1
for (j in 1:nrow(runs)){
runs$runDifference[j] <- difftime(runs$Date[j], runs$Date[1], units = "hours")
}
p_list[[z]] <- runs
}
}
allData <- bind_rows(p_list)
allData$filterRun <- paste(allData$filter,allData$runID,sep=" run ")
allData$runStartDate <- paste(allData$runID,format(allData$sampledDatePC,"%m"),sep=" month ")
##write.csv(allData,"C:/Users/Tarri/Desktop/PCcounts08052021.csv", row.names = FALSE)
View(allData)
uniqOld <- unique(oldFile$filterRun)
length(uniqOld)
uniqNew <- unique(allData$filterRun)
length(uniqNew)
allDataOld <- oldFile %>%
group_by(filterRun) %>%
mutate(flowDiff = sampledFlow - lag(sampledFlow))
allDataNew <-allData %>%
group_by(filterRun) %>%
mutate(flowDiff = sampledFlow - lag(sampledFlow))
ggplot() +
geom_point(data = allData, aes(x =runDifference, y = Bin1)) +
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')
ggplot() +
geom_point(data = allData, aes(x =runDifference, y = Bin1)) +
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')
allDataNew$minutes <- as.numeric(format(allDataNew$sampledDatePC,"%M"))
allDataSub <- subset(allData, minutes >15 )
ggplot() +
geom_point(data = allData, aes(x =runDifference, y = Bin1)) +
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')
allData$minutes <- as.numeric(format(allData$sampledDatePC,"%M"))
allDataSub <- subset(allData, minutes >15 )
ggplot() +
geom_point(data = allDataSub, aes(x =runDifference, y = Bin1)) +
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')
ggplot() +
geom_point(data = allData, aes(x =runDifference, y = Bin1)) +
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
allData$minutes <- as.numeric(format(allData$sampledDatePC,"%M"))
allDataSub <- subset(allData, minutes >15 )
ggplot() +
geom_point(data = allDataSub, aes(x =runDifference, y = Bin1)) +
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
ggplot() +
geom_point(data = allData, aes(x =runDifference, y = Bin1)) +
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
allData$minutes <- as.numeric(format(allData$sampledDatePC,"%M"))
allDataSub <- subset(allData, minutes >15 )
ggplot() +
geom_point(data = allDataSub, aes(x =runDifference, y = Bin1)) +
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
allDataSub300 <- subset(allDataSub, Bin1 <300 )
ggplot() +
geom_point(data = allDataSub300, aes(x =runDifference, y = Bin1)) +
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
ggplot() +
geom_point(data = allData, aes(x =runDifference, y = Bin1)) +
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
allData$minutes <- as.numeric(format(allData$sampledDatePC,"%M"))
allDataSub <- subset(allData, minutes >15 )
ggplot() +
geom_point(data = allDataSub, aes(x =runDifference, y = Bin1)) +
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
allDataSub300 <- subset(allDataSub, Bin1 <300 )
ggplot() +
geom_point(data = allDataSub300, aes(x =runDifference, y = Bin1)) +
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,300)
View(allData)
allDataOld <- oldFile %>%
group_by(filterRun) %>%
mutate(flowDiff = sampledFlow - lag(sampledFlow))
allData <-allData %>%
group_by(filterRun) %>%
mutate(flowDiff = sampledFlow - lag(sampledFlow))
View(allData)
allData <-allData %>%
group_by(filterRun) %>%
mutate(flowDiff = sampledFlow - lag(sampledFlow))
allData <- subset(allData, minutes > 15)
ggplot() +
geom_point(data = allData, aes(x =flowDiff, y = Bin1)) +
xlab('Change in flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')
ggplot() +
geom_point(data = allData, aes(x = sampledFlow, y = Bin1)) +
xlab('flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')
ggplot() +
geom_point(data = allData, aes(x =flowDiff, y = Bin1)) +
xlab('Change in flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
ggplot() +
geom_point(data = allData, aes(x = sampledFlow, y = Bin1)) +
xlab('flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
ggplot() +
geom_point(data = allData, aes(x =flowDiff, y = Bin1)) +
xlab('Change in flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
ggplot() +
geom_point(data = allData, aes(x = sampledFlow, y = Bin1)) +
xlab('flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
allDataSub300 <- subset(allData, bin1 < 300)
ggplot() +
geom_point(data = allData, aes(x =flowDiff, y = Bin1)) +
xlab('Change in flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
ggplot() +
geom_point(data = allData, aes(x = sampledFlow, y = Bin1)) +
xlab('flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
allDataSub300 <- subset(allData, Bin1 < 300)
ggplot() +
geom_point(data = allDataSub300, aes(x = sampledFlow, y = Bin1)) +
xlab('flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')
ggplot() +
geom_point(data = allData, aes(x =flowDiff, y = Bin1)) +
xlab('Change in flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
plot1 <- ggplot() +
geom_point(data = allData, aes(x = sampledFlow, y = Bin1)) +
xlab('flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
allDataSub300 <- subset(allData, Bin1 < 300)
plot2 <- ggplot() +
geom_point(data = allDataSub300, aes(x = sampledFlow, y = Bin1)) +
xlab('flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')
plot1/plot2
ggplot() +
geom_point(data = allData, aes(x =flowDiff, y = Bin1)) +
xlab('Change in flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
plot1 <- ggplot() +
geom_point(data = allData, aes(x = sampledFlow, y = Bin1)) +
xlab('flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
allDataSub300 <- subset(allData, Bin1 < 300)
plot2 <- ggplot() +
geom_point(data = allDataSub300, aes(x = sampledFlow, y = Bin1)) +
xlab('flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')
plot1+plot2
ggplot() +
geom_point(data = allData, aes(x =flowDiff, y = Bin1)) +
xlab('Change in flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
ggplot() +
geom_point(data = allData, aes(x = sampledFlow, y = Bin1)) +
xlab('flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,5000)
allDataSub300 <- subset(allData, Bin1 < 300)
ggplot() +
geom_point(data = allDataSub300, aes(x = sampledFlow, y = Bin1)) +
xlab('flow rate (MGD)') +
ylab('2-6 um particle counts (Counts/ml)')
ggplot(allData, aes(x=turbidity, y=Bin1 )) + geom_point(size = 4, color = "blue") + xlim(0, 0.2) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggplot(allData, aes(x=turbidity, y=Bin1 )) + geom_point() + xlim(0, 0.2) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggplot(allData, aes(x=turbidity, y=Bin1 )) + geom_point() + xlim(0, 0.2) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))+ylim(0,5000)
ggplot(allData, aes(x=turbidity, y=Bin1 )) + geom_point() + xlim(0, 0.2) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))+ylim(0,5000)+xlab('Turbidity (NTU)')+ylab('2-6 um particle counts (Counts/ml)')
ggplot(allData, aes(x=turbidity, y=Bin1 )) + geom_point() + xlim(0, 0.2) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))+ylim(0,5000)+xlab('Turbidity (NTU)')+ylab('2-6 um particle counts (Counts/ml)')
ggplot(allData, aes(x=turbidity, y=Bin1 )) + geom_point() + xlim(0, 0.2) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))+ylim(0,1500)+xlim(0,0,7)+xlab('Turbidity (NTU)')+ylab('2-6 um particle counts (Counts/ml)')
ggplot(allData, aes(x=turbidity, y=Bin1 )) + geom_point() + xlim(0, 0.2) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))+ylim(0,5000)+xlab('Turbidity (NTU)')+ylab('2-6 um particle counts (Counts/ml)')
ggplot(allData, aes(x=turbidity, y=Bin1 )) + geom_point() + xlim(0, 0.2) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))+ylim(0,1500)+xlim(0,0.7)+xlab('Turbidity (NTU)')+ylab('2-6 um particle counts (Counts/ml)')
plot1 <- ggplot(allData, aes(runDifference, Bin1, color = filterRun)) +
geom_line(aes(group = filterRun))
data <-subset(allData, (filter >=21 & filter < 24))
plot2 <-ggplot(data, aes(runDifference, Bin1, color = filterRun)) +
geom_line(aes(group = filterRun))
data1 <-subset(allData, (filterRun == "21-3"))
plot3 <- ggplot(data1, aes(runDifference, Bin1, color = filterRun)) +
geom_line(aes(group = filterRun))
plot4 <- ggplot(allData, aes(runDifference, Bin1, label=Bin1)) +
geom_point(aes(group = filterRun, color = filterRun))+
stat_smooth_func(geom="text",method="lm",hjust=0,parse=TRUE) +
geom_smooth(method = "lm", se = TRUE)
plot5 <- ggplot(allData, aes(runDifference, Bin1, label=Bin1)) +
geom_point(aes(group = filterRun, color = filterRun))+
coord_cartesian(ylim = c(0, 300))+
stat_smooth_func(geom="text",method="lm",hjust=0,parse=TRUE) +
geom_smooth(method = "lm", se = TRUE)
plot1
plot4
plot5
ggplot(allData, aes(x=turbidity, y=Bin1 )) + geom_point() + xlim(0, 0.2) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))+ylim(0,1500)+xlim(0,0.7)+xlab('Turbidity (NTU)')+ylab('2-6 um particle counts (Counts/ml)')+geom_smooth(method = "lm", se = TRUE)
View(allData)
filterList <- split(allData, allData$filter)
i <- 0
for (filter in filterList){
runDateList <- split(filter, filter$runID)
i <- i +1
for (ID in runDateList){
ID$filterRunDate <- paste(ID$filter,format(ID$sampledDatePC[1],"%m/%d/%Y"),sep=":")
IDList[[i]] <- ID
}
}
IDList <- list()
filterList <- split(allData, allData$filter)
i <- 0
for (filter in filterList){
runDateList <- split(filter, filter$runID)
i <- i +1
for (ID in runDateList){
ID$filterRunDate <- paste(ID$filter,format(ID$sampledDatePC[1],"%m/%d/%Y"),sep=":")
IDList[[i]] <- ID
}
}
View(IDList)
view(IDList[1])
view(IDList[2])
view(IDList[3])
IDList <- list()
filterList <- split(allData, allData$filter)
i <- 0
for (filter in filterList){
runDateList <- split(filter, filter$runID)
for (ID in runDateList){
i <- i +1
ID$filterRunDate <- paste(ID$filter,format(ID$sampledDatePC[1],"%m/%d"),sep=" - ")
IDList[[i]] <- ID
}
}
View(IDList)
FilterDateDF <- bind_rows(IDList)
FilterDateDF <- FilterDateDF[order(FilterDateDF$filter, FilterDateDF$Date), ]
View(FilterDateDF)
FilterDateDF <- subset(FilterDateDF, Bin1 < 300)
newList <- split(FilterDateDF, f = FilterDateDF$filter)
for (filter in newList){
if (nrow(filter) == 0){
next
}
plot <- ggplot(filter, aes(filterRunDate, Bin1, color = filterRunDate)) +
geom_point(aes(group = filterRunDate))
print(plot)
}
for (filter in newList){
if (nrow(filter) == 0){
next
}
plot <- ggplot(filter, aes(runDifference, Bin1, color = filterRunDate)) +
geom_point(aes(group = filterRunDate))
print(plot)
}
for (filter in newList){
if (nrow(filter) == 0){
next
}
plot <- ggplot(filter, aes(runDifference, Bin1, color = filterRunDate)) +
geom_point(aes(group = filterRunDate)) + scale_fill_discrete(name = "Filter - Run start date")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
print(plot)
}
for (filter in newList){
if (nrow(filter) == 0){
next
}
plot <- ggplot(filter, aes(runDifference, Bin1, color = filterRunDate)) +
geom_point(aes(group = filterRunDate)) + guides(fill=guide_legend(title='Filter - Run start datae'))+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
print(plot)
}
for (filter in newList){
if (nrow(filter) == 0){
next
}
plot <- ggplot(filter, aes(runDifference, Bin1, color = filterRunDate)) +
geom_point(aes(group = filterRunDate)) + labs(color = "Filter - Run start date") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
print(plot)
}
for (filter in newList){
if (nrow(filter) == 0){
next
}
plot <- ggplot(filter, aes(runDifference, Bin1, color = filterRunDate)) +
geom_point(aes(group = filterRunDate)) + labs(color = "Filter - Run start date") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))+
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')+
print(plot)
}
for (filter in newList){
if (nrow(filter) == 0){
next
}
plot <- ggplot(filter, aes(runDifference, Bin1, color = filterRunDate)) +
geom_point(aes(group = filterRunDate)) + labs(color = "Filter - Run start date") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))+
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')
print(plot)
}
IDList <- list()
filterList <- split(allData, allData$filter)
i <- 0
for (filter in filterList){
runDateList <- split(filter, filter$runID)
for (ID in runDateList){
i <- i +1
ID$filterRunDate <- paste(ID$filter,format(ID$sampledDatePC[1],"%m/%d"),sep=" - ")
IDList[[i]] <- ID
}
}
FilterDateDF <- bind_rows(IDList)
FilterDateDF <- FilterDateDF[order(FilterDateDF$filter, FilterDateDF$Date), ]
##FilterDateDF <- subset(FilterDateDF, Bin1 < 300)
newList <- split(FilterDateDF, f = FilterDateDF$filter)
for (filter in newList){
if (nrow(filter) == 0){
next
}
plot <- ggplot(filter, aes(runDifference, Bin1, color = filterRunDate)) +
geom_point(aes(group = filterRunDate)) + labs(color = "Filter - Run start date") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))+
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')
print(plot)
}
IDList <- list()
filterList <- split(allData, allData$filter)
i <- 0
for (filter in filterList){
runDateList <- split(filter, filter$runID)
for (ID in runDateList){
i <- i +1
ID$filterRunDate <- paste(ID$filter,format(ID$sampledDatePC[1],"%m/%d"),sep=" - ")
IDList[[i]] <- ID
}
}
FilterDateDF <- bind_rows(IDList)
FilterDateDF <- FilterDateDF[order(FilterDateDF$filter, FilterDateDF$Date), ]
FilterDateDF <- subset(FilterDateDF, Bin1 < 300)
newList <- split(FilterDateDF, f = FilterDateDF$filter)
for (filter in newList){
if (nrow(filter) == 0){
next
}
plot <- ggplot(filter, aes(runDifference, Bin1, color = filterRunDate)) +
geom_point(aes(group = filterRunDate)) + labs(color = "Filter - Run start date") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))+
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')
print(plot)
}
boxplot(FilterDateDF$Bin1~FilterDateDF$filter, col=rainbow(4),
xlab = "Filter",
ylab = "2-6 um particle counts (Counts/ml)")
IDList <- list()
filterList <- split(allData, allData$filter)
i <- 0
for (filter in filterList){
runDateList <- split(filter, filter$runID)
for (ID in runDateList){
i <- i +1
ID$filterRunDate <- paste(ID$filter,format(ID$sampledDatePC[1],"%m/%d"),sep=" - ")
IDList[[i]] <- ID
}
}
FilterDateDF <- bind_rows(IDList)
FilterDateDF <- FilterDateDF[order(FilterDateDF$filter, FilterDateDF$Date), ]
FilterDateDF <- subset(FilterDateDF, Bin1 < 300)
newList <- split(FilterDateDF, f = FilterDateDF$filter)
for (filter in newList){
if (nrow(filter) == 0){
next
}
plot <- ggplot(filter, aes(runDifference, Bin1, color = filterRunDate)) +
geom_point(aes(group = filterRunDate)) + labs(color = "Filter - Run start date") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))+
xlab('Filter run time (hours)') +
ylab('2-6 um particle counts (Counts/ml)')+
ylim(0,300)
print(plot)
}
boxplot(FilterDateDF$Bin1~FilterDateDF$filter, col=rainbow(4),
xlab = "Filter",
ylab = "2-6 um particle counts (Counts/ml)")
View(data)
