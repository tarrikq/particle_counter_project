i <- 0
##loop through directory to pull out all particle data
for (file in file_list){
i=i+1
if(!grepl("flow", file)){
##removes the .csv and date from the end of each file name and stores the name in a list
titles <- substring(file, 1, nchar(file) - 13)
p_titles[i] <- titles
##reading in the file and taking only the important columns
p_data <- read.csv(file)
##p_data <- subset(file , Date >= as.POSIXct("2021-05-17", format="%m-%d-%Y",tz=Sys.timezone()))
p_data <- p_data[, 2:12]
p_data$filter <- titles
##combines the date and time columns back into a single column with the correct format.
##Also changes the class from CHAR to Date-Time
p_data$Date <- as.POSIXct(paste(p_data$Date, p_data$Time), tz = "EST", format="%m/%d/%Y %H:%M")
##deleting the old time column
p_data[ , c('Time')] <- list(NULL)
##the time was rounded to the nearest 15 minute mark so that it could be accurately joined with the flow data.
##But keep the old time info that wasn't rounded so you know when the particle counter data was recorded.
p_data$sampledDatePC <- p_data$Date
p_data$Date <- lubridate::round_date(p_data$Date, unit = "15 minutes")
##combines the file name with the data associated with it to create a variable
colnames(p_data) <- p_columns
assign(titles, p_data)
table_p <- append(table_p, list(p_data))
names(table_p[i]) <- titles
}}
##removes all the null entries in both lists and then names each data frame by its file name
table_p <- table_p[-which(lapply(table_p,is.null) == T)]
p_titles <- p_titles[-which(lapply(p_titles,is.null) == T)]
names(table_p) <- p_titles
View(p_data)
##adds all .csv files in the working directory into a list
file_list <- list.files(pattern = ".csv")
##creating empty lists to later add variables into
table_p <-list()
table_f <- list()
p_titles <- list()
f_titles <- list()
file_titles <- list()
##list of column names for particle data and flow data
p_columns <- c("Date","Bin1", "Bin2", "Bin3", "Bin4", "Bin5", "Bin6", "Bin7", "Bin8", "Bin9","Filter" , "sampledDatePC")
f_columns <- c("Date", "Flow", "Turbidity", "Filter", "sampledDateFlow")
##iteration variable
i <- 0
##loop through directory to pull out all particle data
for (file in file_list){
i=i+1
if(!grepl("flow", file)){
##removes the .csv and date from the end of each file name and stores the name in a list
titles <- substring(file, 1, nchar(file) - 13)
p_titles[i] <- titles
##reading in the file and taking only the important columns
p_data <- read.csv(file)
p_data <- p_data[, 2:12]
p_data$filter <- titles
##combines the date and time columns back into a single column with the correct format.
##Also changes the class from CHAR to Date-Time
p_data$Date <- as.POSIXct(paste(p_data$Date, p_data$Time), tz = "EST", format="%m/%d/%Y %H:%M")
##deleting the old time column
p_data[ , c('Time')] <- list(NULL)
##the time was rounded to the nearest 15 minute mark so that it could be accurately joined with the flow data.
##But keep the old time info that wasn't rounded so you know when the particle counter data was recorded.
p_data$sampledDatePC <- p_data$Date
p_data$Date <- lubridate::round_date(p_data$Date, unit = "15 minutes")
##combines the file name with the data associated with it to create a variable
colnames(p_data) <- p_columns
assign(titles, p_data)
table_p <- append(table_p, list(p_data))
names(table_p[i]) <- titles
}}
##removes all the null entries in both lists and then names each data frame by its file name
table_p <- table_p[-which(lapply(table_p,is.null) == T)]
p_titles <- p_titles[-which(lapply(p_titles,is.null) == T)]
names(table_p) <- p_titles
View(table_p)
##adds all .csv files in the working directory into a list
file_list <- list.files(pattern = ".csv")
##creating empty lists to later add variables into
##filters <- c("filter11", "filter12", "filter13", "filter14", "filter15","filter16","filter17","filter18","filter19",
##"filter21","filter22","filter23","filter24","filter25","filter26")
##table_p <-list("filter11", "filter12", "filter13", "filter14", "filter15","filter16","filter17","filter18","filter19",
## "filter21","filter22","filter23","filter24","filter25","filter26")
table_f <- list()
table_p <- list()
p_titles <- list()
f_titles <- list()
file_titles <- list()
##names(table_p) <- filters
##list of column names for particle data and flow data
p_columns <- c("Date","Bin1", "Bin2", "Bin3", "Bin4", "Bin5", "Bin6", "Bin7", "Bin8", "Bin9","Filter" , "sampledDatePC")
f_columns <- c("Date", "Flow", "Turbidity", "Filter", "sampledDateFlow")
##iteration variable
i <- 0
##loop through directory to pull out all particle data
for (file in file_list){
i=i+1
if(!grepl("flow", file)){
##removes the .csv and date from the end of each file name and stores the name in a list
titles <- substring(file, 1, nchar(file) - 13)
p_titles[i] <- titles
##reading in the file and taking only the important columns
p_data <- read.csv(file)
##p_data <- subset(file , Date >= as.POSIXct("2021-05-17", format="%m-%d-%Y",tz=Sys.timezone()))
p_data <- p_data[, 2:12]
p_data$filter <- titles
##combines the date and time columns back into a single column with the correct format.
##Also changes the class from CHAR to Date-Time
p_data$Date <- as.POSIXct(paste(p_data$Date, p_data$Time), tz = "EST", format="%m/%d/%Y %H:%M")
##deleting the old time column
p_data[ , c('Time')] <- list(NULL)
##the time was rounded to the nearest 15 minute mark so that it could be accurately joined with the flow data.
##But keep the old time info that wasn't rounded so you know when the particle counter data was recorded.
p_data$sampledDatePC <- p_data$Date
p_data$Date <- lubridate::round_date(p_data$Date, unit = "15 minutes")
##combines the file name with the data associated with it to create a variable
colnames(p_data) <- p_columns
assign(titles, p_data)
table_p <- append(table_p, list(p_data))
names(table_p[i]) <- titles
}}
##removes all the null entries in both lists and then names each data frame by its file name
table_p <- table_p[-which(lapply(table_p,is.null) == T)]
p_titles <- p_titles[-which(lapply(p_titles,is.null) == T)]
names(table_p) <- p_titles
View(table_p)
##iteration variable
i <- 0
##loop through directory to pull out all particle data
for (file in file_list){
i=i+1
if(!grepl("flow", file)){
##removes the .csv and date from the end of each file name and stores the name in a list
titles <- substring(file, 1, nchar(file) - 13)
p_titles[i] <- titles
##reading in the file and taking only the important columns
p_data <- read.csv(file)
##p_data <- subset(file , Date >= as.POSIXct("2021-05-17", format="%m-%d-%Y",tz=Sys.timezone()))
p_data <- p_data[, 2:12]
p_data$filter <- titles
break
##combines the date and time columns back into a single column with the correct format.
##Also changes the class from CHAR to Date-Time
p_data$Date <- as.POSIXct(paste(p_data$Date, p_data$Time), tz = "EST", format="%m/%d/%Y %H:%M")
##deleting the old time column
p_data[ , c('Time')] <- list(NULL)
##the time was rounded to the nearest 15 minute mark so that it could be accurately joined with the flow data.
##But keep the old time info that wasn't rounded so you know when the particle counter data was recorded.
p_data$sampledDatePC <- p_data$Date
p_data$Date <- lubridate::round_date(p_data$Date, unit = "15 minutes")
##combines the file name with the data associated with it to create a variable
colnames(p_data) <- p_columns
assign(titles, p_data)
table_p <- append(table_p, list(p_data))
names(table_p[i]) <- titles
}}
##removes all the null entries in both lists and then names each data frame by its file name
table_p <- table_p[-which(lapply(table_p,is.null) == T)]
p_titles <- p_titles[-which(lapply(p_titles,is.null) == T)]
names(table_p) <- p_titles
View(`filter 11`)
view(p_data)
##iteration variable
i <- 0
##loop through directory to pull out all particle data
for (file in file_list){
i=i+1
if(!grepl("flow", file)){
##removes the .csv and date from the end of each file name and stores the name in a list
titles <- substring(file, 1, nchar(file) - 13)
p_titles[i] <- titles
##reading in the file and taking only the important columns
p_data <- read.csv(file)
p_data <- p_data[, 2:12]
p_data$filter <- titles
##combines the date and time columns back into a single column with the correct format.
##Also changes the class from CHAR to Date-Time
p_data$Date <- as.POSIXct(paste(p_data$Date, p_data$Time), tz = "EST", format="%m/%d/%Y %H:%M")
p_data <- subset(file , Date >= as.POSIXct("2021-05-17", format="%m-%d-%Y",tz=Sys.timezone()) & Date <= as.POSIXct("2021-05-17", format="%m-%d-%Y",tz=Sys.timezone()))
##deleting the old time column
p_data[ , c('Time')] <- list(NULL)
##the time was rounded to the nearest 15 minute mark so that it could be accurately joined with the flow data.
##But keep the old time info that wasn't rounded so you know when the particle counter data was recorded.
p_data$sampledDatePC <- p_data$Date
p_data$Date <- lubridate::round_date(p_data$Date, unit = "15 minutes")
##combines the file name with the data associated with it to create a variable
colnames(p_data) <- p_columns
assign(titles, p_data)
table_p <- append(table_p, list(p_data))
names(table_p[i]) <- titles
}}
##iteration variable
i <- 0
##loop through directory to pull out all particle data
for (file in file_list){
i=i+1
if(!grepl("flow", file)){
##removes the .csv and date from the end of each file name and stores the name in a list
titles <- substring(file, 1, nchar(file) - 13)
p_titles[i] <- titles
##reading in the file and taking only the important columns
p_data <- read.csv(file)
p_data <- p_data[, 2:12]
p_data$filter <- titles
##combines the date and time columns back into a single column with the correct format.
##Also changes the class from CHAR to Date-Time
p_data$Date <- as.POSIXct(paste(p_data$Date, p_data$Time), tz = "EST", format="%m/%d/%Y %H:%M")
p_data <- subset(p_data , Date >= as.POSIXct("2021-05-17", format="%m-%d-%Y",tz=Sys.timezone()) & Date <= as.POSIXct("2021-05-17", format="%m-%d-%Y",tz=Sys.timezone()))
##deleting the old time column
p_data[ , c('Time')] <- list(NULL)
##the time was rounded to the nearest 15 minute mark so that it could be accurately joined with the flow data.
##But keep the old time info that wasn't rounded so you know when the particle counter data was recorded.
p_data$sampledDatePC <- p_data$Date
p_data$Date <- lubridate::round_date(p_data$Date, unit = "15 minutes")
##combines the file name with the data associated with it to create a variable
colnames(p_data) <- p_columns
assign(titles, p_data)
table_p <- append(table_p, list(p_data))
names(table_p[i]) <- titles
}}
##removes all the null entries in both lists and then names each data frame by its file name
table_p <- table_p[-which(lapply(table_p,is.null) == T)]
p_titles <- p_titles[-which(lapply(p_titles,is.null) == T)]
names(table_p) <- p_titles
View(`filter 11`)
View(`filter 12`)
##iteration variable
i <- 0
##loop through directory to pull out all particle data
for (file in file_list){
i=i+1
if(!grepl("flow", file)){
##removes the .csv and date from the end of each file name and stores the name in a list
titles <- substring(file, 1, nchar(file) - 13)
p_titles[i] <- titles
##reading in the file and taking only the important columns
p_data <- read.csv(file)
p_data <- p_data[, 2:12]
p_data$filter <- titles
##combines the date and time columns back into a single column with the correct format.
##Also changes the class from CHAR to Date-Time
p_data$Date <- as.POSIXct(paste(p_data$Date, p_data$Time), tz = "EST", format="%m/%d/%Y %H:%M")
p_data <- subset(p_data , Date >= as.POSIXct(2021-05-17, format="%m-%d-%Y",tz=Sys.timezone()) & Date <= as.POSIXct(2021-05-17, format="%m-%d-%Y",tz=Sys.timezone()))
##deleting the old time column
p_data[ , c('Time')] <- list(NULL)
##the time was rounded to the nearest 15 minute mark so that it could be accurately joined with the flow data.
##But keep the old time info that wasn't rounded so you know when the particle counter data was recorded.
p_data$sampledDatePC <- p_data$Date
p_data$Date <- lubridate::round_date(p_data$Date, unit = "15 minutes")
##combines the file name with the data associated with it to create a variable
colnames(p_data) <- p_columns
assign(titles, p_data)
table_p <- append(table_p, list(p_data))
names(table_p[i]) <- titles
}}
##iteration variable
i <- 0
##loop through directory to pull out all particle data
for (file in file_list){
i=i+1
if(!grepl("flow", file)){
##removes the .csv and date from the end of each file name and stores the name in a list
titles <- substring(file, 1, nchar(file) - 13)
p_titles[i] <- titles
##reading in the file and taking only the important columns
p_data <- read.csv(file)
p_data <- p_data[, 2:12]
p_data$filter <- titles
##combines the date and time columns back into a single column with the correct format.
##Also changes the class from CHAR to Date-Time
p_data$Date <- as.POSIXct(paste(p_data$Date, p_data$Time), tz = "EST", format="%m/%d/%Y %H:%M")
p_data <- subset(p_data , Date >= as.POSIXct("2021-05-17", format="%m-%d-%Y",tz=Sys.timezone()) & Date <= as.POSIXct("2021-06-17", format="%m-%d-%Y",tz=Sys.timezone()))
##deleting the old time column
p_data[ , c('Time')] <- list(NULL)
##the time was rounded to the nearest 15 minute mark so that it could be accurately joined with the flow data.
##But keep the old time info that wasn't rounded so you know when the particle counter data was recorded.
p_data$sampledDatePC <- p_data$Date
p_data$Date <- lubridate::round_date(p_data$Date, unit = "15 minutes")
##combines the file name with the data associated with it to create a variable
colnames(p_data) <- p_columns
assign(titles, p_data)
table_p <- append(table_p, list(p_data))
names(table_p[i]) <- titles
}}
##removes all the null entries in both lists and then names each data frame by its file name
table_p <- table_p[-which(lapply(table_p,is.null) == T)]
p_titles <- p_titles[-which(lapply(p_titles,is.null) == T)]
names(table_p) <- p_titles
##iteration variable
i <- 0
##loop through directory to pull out all particle data
for (file in file_list){
i=i+1
if(!grepl("flow", file)){
##removes the .csv and date from the end of each file name and stores the name in a list
titles <- substring(file, 1, nchar(file) - 13)
p_titles[i] <- titles
##reading in the file and taking only the important columns
p_data <- read.csv(file)
p_data <- p_data[, 2:12]
p_data$filter <- titles
##combines the date and time columns back into a single column with the correct format.
##Also changes the class from CHAR to Date-Time
p_data$Date <- as.POSIXct(paste(p_data$Date, p_data$Time), tz = "EST", format="%m/%d/%Y %H:%M")
p_data <- subset(p_data , (Date >= as.POSIXct("2021-05-17", format="%m-%d-%Y",tz=Sys.timezone()) & Date <= as.POSIXct("2021-06-17", format="%m-%d-%Y",tz=Sys.timezone())))
##deleting the old time column
p_data[ , c('Time')] <- list(NULL)
##the time was rounded to the nearest 15 minute mark so that it could be accurately joined with the flow data.
##But keep the old time info that wasn't rounded so you know when the particle counter data was recorded.
p_data$sampledDatePC <- p_data$Date
p_data$Date <- lubridate::round_date(p_data$Date, unit = "15 minutes")
##combines the file name with the data associated with it to create a variable
colnames(p_data) <- p_columns
assign(titles, p_data)
table_p <- append(table_p, list(p_data))
names(table_p[i]) <- titles
}}
##removes all the null entries in both lists and then names each data frame by its file name
table_p <- table_p[-which(lapply(table_p,is.null) == T)]
p_titles <- p_titles[-which(lapply(p_titles,is.null) == T)]
names(table_p) <- p_titles
##iteration variable
i <- 0
##loop through directory to pull out all particle data
for (file in file_list){
i=i+1
if(!grepl("flow", file)){
##removes the .csv and date from the end of each file name and stores the name in a list
titles <- substring(file, 1, nchar(file) - 13)
p_titles[i] <- titles
##reading in the file and taking only the important columns
p_data <- read.csv(file)
p_data <- p_data[, 2:12]
p_data$filter <- titles
##combines the date and time columns back into a single column with the correct format.
##Also changes the class from CHAR to Date-Time
p_data$Date <- as.POSIXct(paste(p_data$Date, p_data$Time), tz = "EST", format="%m/%d/%Y %H:%M")
break
p_data <- subset(p_data , (Date >= as.POSIXct("2021-05-17", format="%m-%d-%Y",tz=Sys.timezone()) & Date <= as.POSIXct("2021-06-17", format="%m-%d-%Y",tz=Sys.timezone())))
##deleting the old time column
p_data[ , c('Time')] <- list(NULL)
##the time was rounded to the nearest 15 minute mark so that it could be accurately joined with the flow data.
##But keep the old time info that wasn't rounded so you know when the particle counter data was recorded.
p_data$sampledDatePC <- p_data$Date
p_data$Date <- lubridate::round_date(p_data$Date, unit = "15 minutes")
##combines the file name with the data associated with it to create a variable
colnames(p_data) <- p_columns
assign(titles, p_data)
table_p <- append(table_p, list(p_data))
names(table_p[i]) <- titles
}}
##removes all the null entries in both lists and then names each data frame by its file name
table_p <- table_p[-which(lapply(table_p,is.null) == T)]
p_titles <- p_titles[-which(lapply(p_titles,is.null) == T)]
names(table_p) <- p_titles
View(p_data)
##iteration variable
i <- 0
##loop through directory to pull out all particle data
for (file in file_list){
i=i+1
if(!grepl("flow", file)){
##removes the .csv and date from the end of each file name and stores the name in a list
titles <- substring(file, 1, nchar(file) - 13)
p_titles[i] <- titles
##reading in the file and taking only the important columns
p_data <- read.csv(file)
p_data <- p_data[, 2:12]
p_data$filter <- titles
##combines the date and time columns back into a single column with the correct format.
##Also changes the class from CHAR to Date-Time
p_data$Date <- as.POSIXct(paste(p_data$Date, p_data$Time), tz = "EST", format="%m/%d/%Y %H:%M")
break
p_data <- subset(p_data , (Date >= as.POSIXct("2021-05-17", format="%m-%d-%Y",tz=Sys.timezone()) && Date <= as.POSIXct("2021-06-17", format="%m-%d-%Y",tz=Sys.timezone())))
##deleting the old time column
p_data[ , c('Time')] <- list(NULL)
##the time was rounded to the nearest 15 minute mark so that it could be accurately joined with the flow data.
##But keep the old time info that wasn't rounded so you know when the particle counter data was recorded.
p_data$sampledDatePC <- p_data$Date
p_data$Date <- lubridate::round_date(p_data$Date, unit = "15 minutes")
##combines the file name with the data associated with it to create a variable
colnames(p_data) <- p_columns
assign(titles, p_data)
table_p <- append(table_p, list(p_data))
names(table_p[i]) <- titles
}}
##removes all the null entries in both lists and then names each data frame by its file name
table_p <- table_p[-which(lapply(table_p,is.null) == T)]
p_titles <- p_titles[-which(lapply(p_titles,is.null) == T)]
names(table_p) <- p_titles
View(p_data)
##iteration variable
i <- 0
##loop through directory to pull out all particle data
for (file in file_list){
i=i+1
if(!grepl("flow", file)){
##removes the .csv and date from the end of each file name and stores the name in a list
titles <- substring(file, 1, nchar(file) - 13)
p_titles[i] <- titles
##reading in the file and taking only the important columns
p_data <- read.csv(file)
p_data <- p_data[, 2:12]
p_data$filter <- titles
##combines the date and time columns back into a single column with the correct format.
##Also changes the class from CHAR to Date-Time
p_data$Date <- as.POSIXct(paste(p_data$Date, p_data$Time), tz = "EST", format="%m/%d/%Y %H:%M")
p_data <- subset(p_data , (Date >= as.POSIXct("2021-05-17", format="%m-%d-%Y",tz=Sys.timezone()) && Date <= as.POSIXct("2021-06-17", format="%m-%d-%Y",tz=Sys.timezone())))
##deleting the old time column
p_data[ , c('Time')] <- list(NULL)
##the time was rounded to the nearest 15 minute mark so that it could be accurately joined with the flow data.
##But keep the old time info that wasn't rounded so you know when the particle counter data was recorded.
p_data$sampledDatePC <- p_data$Date
p_data$Date <- lubridate::round_date(p_data$Date, unit = "15 minutes")
##combines the file name with the data associated with it to create a variable
colnames(p_data) <- p_columns
assign(titles, p_data)
table_p <- append(table_p, list(p_data))
names(table_p[i]) <- titles
}}
##removes all the null entries in both lists and then names each data frame by its file name
table_p <- table_p[-which(lapply(table_p,is.null) == T)]
p_titles <- p_titles[-which(lapply(p_titles,is.null) == T)]
names(table_p) <- p_titles
View(p_data)
##adds all .csv files in the working directory into a list
file_list <- list.files(pattern = ".csv")
##creating empty lists to later add variables into
table_p <-list()
table_f <- list()
p_titles <- list()
f_titles <- list()
file_titles <- list()
##list of column names for particle data and flow data
p_columns <- c("Date","Bin1", "Bin2", "Bin3", "Bin4", "Bin5", "Bin6", "Bin7", "Bin8", "Bin9","Filter" , "sampledDatePC")
f_columns <- c("Date", "Flow", "Turbidity", "Filter", "sampledDateFlow")
##iteration variable
i <- 0
##loop through directory to pull out all particle data
for (file in file_list){
i=i+1
if(!grepl("flow", file)){
##removes the .csv and date from the end of each file name and stores the name in a list
titles <- substring(file, 1, nchar(file) - 13)
p_titles[i] <- titles
##reading in the file and taking only the important columns
p_data <- read.csv(file)
p_data <- p_data[, 2:12]
p_data$filter <- titles
##combines the date and time columns back into a single column with the correct format.
##Also changes the class from CHAR to Date-Time
p_data$Date <- as.POSIXct(paste(p_data$Date, p_data$Time), tz = "EST", format="%m/%d/%Y %H:%M")
##deleting the old time column
p_data[ , c('Time')] <- list(NULL)
##the time was rounded to the nearest 15 minute mark so that it could be accurately joined with the flow data.
##But keep the old time info that wasn't rounded so you know when the particle counter data was recorded.
p_data$sampledDatePC <- p_data$Date
p_data$Date <- lubridate::round_date(p_data$Date, unit = "15 minutes")
##combines the file name with the data associated with it to create a variable
colnames(p_data) <- p_columns
assign(titles, p_data)
table_p <- append(table_p, list(p_data))
names(table_p[i]) <- titles
}}
##removes all the null entries in both lists and then names each data frame by its file name
table_p <- table_p[-which(lapply(table_p,is.null) == T)]
p_titles <- p_titles[-which(lapply(p_titles,is.null) == T)]
names(table_p) <- p_titles
##adds all .csv files in the working directory into a list
file_list <- list.files(pattern = ".csv")
##creating empty lists to later add variables into
table_p <-list()
table_f <- list()
p_titles <- list()
f_titles <- list()
file_titles <- list()
##list of column names for particle data and flow data
p_columns <- c("Date","Bin1", "Bin2", "Bin3", "Bin4", "Bin5", "Bin6", "Bin7", "Bin8", "Bin9","Filter" , "sampledDatePC")
f_columns <- c("Date", "Flow", "Turbidity", "Filter", "sampledDateFlow")
##iteration variable
i <- 0
##loop through directory to pull out all particle data
for (file in file_list){
i=i+1
if(!grepl("flow", file)){
##removes the .csv and date from the end of each file name and stores the name in a list
titles <- substring(file, 1, nchar(file) - 13)
p_titles[i] <- titles
##reading in the file and taking only the important columns
p_data <- read.csv(file)
p_data <- p_data[, 2:12]
p_data$filter <- titles
##combines the date and time columns back into a single column with the correct format.
##Also changes the class from CHAR to Date-Time
p_data$Date <- as.POSIXct(paste(p_data$Date, p_data$Time), tz = "EST", format="%m/%d/%Y %H:%M")
##deleting the old time column
p_data[ , c('Time')] <- list(NULL)
##the time was rounded to the nearest 15 minute mark so that it could be accurately joined with the flow data.
##But keep the old time info that wasn't rounded so you know when the particle counter data was recorded.
p_data$sampledDatePC <- p_data$Date
p_data$Date <- lubridate::round_date(p_data$Date, unit = "15 minutes")
##combines the file name with the data associated with it to create a variable
colnames(p_data) <- p_columns
assign(titles, p_data)
table_p <- append(table_p, list(p_data))
names(table_p[i]) <- titles
}}
##removes all the null entries in both lists and then names each data frame by its file name
table_p <- table_p[-which(lapply(table_p,is.null) == T)]
p_titles <- p_titles[-which(lapply(p_titles,is.null) == T)]
names(table_p) <- p_titles
